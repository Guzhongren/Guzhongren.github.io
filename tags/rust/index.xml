<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Rust - 标签 - 谷中仁的博客</title><link>https://guzhongren.github.io/tags/rust/</link><description>Rust - 标签 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 06 Jun 2020 11:03:11 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/tags/rust/" rel="self" type="application/rss+xml"/><item><title>Cargo 运行出错及解决方案</title><link>https://guzhongren.github.io/2020/06/cargo%E8%BF%90%E8%A1%8C%E5%87%BA%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link><pubDate>Sat, 06 Jun 2020 11:03:11 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2020/06/cargo%E8%BF%90%E8%A1%8C%E5%87%BA%E9%94%99%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1591414855728-7e70d9a7b4e0?ixlib=rb-1.2.1&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;auto=format&amp;fit=crop&amp;w=1267&amp;q=80" referrerpolicy="no-referrer">
            </div><h2 id="问题">问题</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cargo run
</span></span><span class="line"><span class="cl">error: failed to run <span class="sb">`</span>rustc<span class="sb">`</span> to learn about target-specific information
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Caused by:
</span></span><span class="line"><span class="cl">  process didn<span class="err">&#39;</span>t <span class="nb">exit</span> successfully: <span class="sb">`</span>rustc - --crate-name ___ --print<span class="o">=</span>file-names -Zprofile -Ccodegen-units<span class="o">=</span><span class="m">1</span> -Copt-level<span class="o">=</span><span class="m">0</span> -Clink-dead-code -Coverflow-checks<span class="o">=</span>off -Zpanic_abort_tests -Cpanic<span class="o">=</span>abort --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print<span class="o">=</span>sysroot --print<span class="o">=</span>cfg<span class="sb">`</span> <span class="o">(</span><span class="nb">exit</span> code: 1<span class="o">)</span>
</span></span><span class="line"><span class="cl">--- stderr
</span></span><span class="line"><span class="cl">error: the option <span class="sb">`</span>Z<span class="sb">`</span> is only accepted on the nightly compiler<span class="sb">`</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>最近更新了<code>rust</code>, 然后运行<code>cargo run</code>, 莫名其妙的出现了上面的问题。</p>]]></description></item><item><title>Rust Doc 小记</title><link>https://guzhongren.github.io/2020/04/rust-doc%E5%B0%8F%E8%AE%B0.zh/</link><pubDate>Thu, 16 Apr 2020 22:56:55 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2020/04/rust-doc%E5%B0%8F%E8%AE%B0.zh/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://i.loli.net/2020/04/16/nBq8Zc2u3IV7Pmf.jpg" referrerpolicy="no-referrer">
            </div><h2 id="前言">前言</h2>
<p>学习 Rust 肯定离不开查看其官方或者第三方开发者的文档，而在 Rust 的 crate 中，对于开发者或者使用者，文档是非常友好的。在这就不举例了。本文主要是记录一下写 rust doc 的一些小步骤。方便日后查阅。</p>]]></description></item><item><title>Rust 中闭包的写法</title><link>https://guzhongren.github.io/2020/04/rust%E4%B8%AD%E9%97%AD%E5%8C%85%E7%9A%84%E5%86%99%E6%B3%95.zh/</link><pubDate>Tue, 07 Apr 2020 22:26:14 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2020/04/rust%E4%B8%AD%E9%97%AD%E5%8C%85%E7%9A%84%E5%86%99%E6%B3%95.zh/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.pexels.com/photos/3609267/pexels-photo-3609267.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;w=500" referrerpolicy="no-referrer">
            </div><p>在鲁迅的文章《孔乙己》中说，茴香豆的茴字有好几种写法，记得没错的话应该是四种，具体哪四种请参考下文引用。</p>
<p>在 Rust 中，闭包也有好几种写法，今天就来总结一哈。</p>]]></description></item><item><title>[翻译]Hello,wasm Pack Cargo.toml</title><link>https://guzhongren.github.io/2019/11/%E7%BF%BB%E8%AF%91hellowasm-pack-cargo.toml.zh/</link><pubDate>Wed, 27 Nov 2019 23:23:36 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2019/11/%E7%BF%BB%E8%AF%91hellowasm-pack-cargo.toml.zh/</guid><description><![CDATA[<p></p>
<h2 id="cargotoml">Cargo.toml</h2>
<p><code>cargo.toml</code>是 Rust 包管理器 <code>cargo</code> 的清单文件。这个文件包 <code>name</code>、 <code>version</code> 和包的依赖，在 Rust 中，我们一般称之为 <code>crate</code>。</p>
<p>在示例中给出了一系列信息，但是我们主要讨论如下三点：</p>]]></description></item><item><title>基于 Rust 的 WebAssembly 工程开发过程小记</title><link>https://guzhongren.github.io/2019/11/%E5%9F%BA%E4%BA%8Erust%E7%9A%84webassembly%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E5%B0%8F%E8%AE%B0/</link><pubDate>Sat, 23 Nov 2019 22:43:42 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2019/11/%E5%9F%BA%E4%BA%8Erust%E7%9A%84webassembly%E5%B7%A5%E7%A8%8B%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E5%B0%8F%E8%AE%B0/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://i.loli.net/2020/06/27/PabvnjXR1MouQcz.png" referrerpolicy="no-referrer">
            </div><h2 id="初始化工程">初始化工程</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">$ npm init rust-webpack web_assembly_demo
</span></span><span class="line"><span class="cl">npx: 18 安装成功，用时 3.989 秒
</span></span><span class="line"><span class="cl"> Rust +  WebAssembly + Webpack = ️
</span></span><span class="line"><span class="cl">Installed dependencies
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="安装-web-依赖">安装 Web 依赖</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-gdscript3" data-lang="gdscript3"><span class="line"><span class="cl"><span class="o">$</span> <span class="n">yarn</span>
</span></span><span class="line"><span class="cl"><span class="n">yarn</span> <span class="n">install</span> <span class="n">v1</span><span class="o">.</span><span class="mf">19.1</span>
</span></span><span class="line"><span class="cl"><span class="n">warning</span> <span class="n">package</span><span class="o">.</span><span class="n">json</span><span class="p">:</span> <span class="n">No</span> <span class="n">license</span> <span class="n">field</span>
</span></span><span class="line"><span class="cl"><span class="n">info</span> <span class="n">No</span> <span class="n">lockfile</span> <span class="n">found</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="n">warning</span> <span class="n">package</span><span class="o">-</span><span class="n">lock</span><span class="o">.</span><span class="n">json</span> <span class="n">found</span><span class="o">.</span> <span class="n">Your</span> <span class="n">project</span> <span class="n">contains</span> <span class="n">lock</span> <span class="n">files</span> <span class="n">generated</span> <span class="n">by</span> <span class="n">tools</span> <span class="n">other</span> <span class="n">than</span> <span class="n">Yarn</span><span class="o">.</span> <span class="n">It</span> <span class="n">is</span> <span class="n">advised</span> <span class="ow">not</span> <span class="n">to</span> <span class="n">mix</span> <span class="n">package</span> <span class="n">managers</span> <span class="ow">in</span> <span class="n">order</span> <span class="n">to</span> <span class="n">avoid</span> <span class="n">resolution</span> <span class="n">inconsistencies</span> <span class="n">caused</span> <span class="n">by</span> <span class="n">unsynchronized</span> <span class="n">lock</span> <span class="n">files</span><span class="o">.</span> <span class="n">To</span> <span class="n">clear</span> <span class="n">this</span> <span class="n">warning</span><span class="p">,</span> <span class="n">remove</span> <span class="n">package</span><span class="o">-</span><span class="n">lock</span><span class="o">.</span><span class="n">json</span><span class="o">.</span>
</span></span><span class="line"><span class="cl"><span class="n">warning</span> <span class="n">rust</span><span class="o">-</span><span class="n">webpack</span><span class="o">-</span><span class="n">template</span><span class="err">@</span><span class="mf">0.1</span><span class="o">.</span><span class="mi">0</span><span class="p">:</span> <span class="n">No</span> <span class="n">license</span> <span class="n">field</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">1</span><span class="o">/</span><span class="mi">4</span><span class="p">]</span>   <span class="n">Resolving</span> <span class="n">packages</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="n">warning</span> <span class="err">@</span><span class="n">wasm</span><span class="o">-</span><span class="k">tool</span><span class="o">/</span><span class="n">wasm</span><span class="o">-</span><span class="n">pack</span><span class="o">-</span><span class="n">plugin</span> <span class="o">&gt;</span> <span class="n">watchpack</span> <span class="o">&gt;</span> <span class="n">chokidar</span> <span class="o">&gt;</span> <span class="n">fsevents</span><span class="err">@</span><span class="mf">1.2</span><span class="o">.</span><span class="mi">9</span><span class="p">:</span> <span class="n">One</span> <span class="n">of</span> <span class="n">your</span> <span class="n">dependencies</span> <span class="n">needs</span> <span class="n">to</span> <span class="n">upgrade</span> <span class="n">to</span> <span class="n">fsevents</span> <span class="n">v2</span><span class="p">:</span> <span class="mi">1</span><span class="p">)</span> <span class="n">Proper</span> <span class="n">nodejs</span> <span class="n">v10</span><span class="o">+</span> <span class="n">support</span> <span class="mi">2</span><span class="p">)</span> <span class="n">No</span> <span class="n">more</span> <span class="n">fetching</span> <span class="n">binaries</span> <span class="n">from</span> <span class="n">AWS</span><span class="p">,</span> <span class="n">smaller</span> <span class="n">package</span> <span class="n">size</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">2</span><span class="o">/</span><span class="mi">4</span><span class="p">]</span>   <span class="n">Fetching</span> <span class="n">packages</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">3</span><span class="o">/</span><span class="mi">4</span><span class="p">]</span>   <span class="n">Linking</span> <span class="n">dependencies</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="mi">4</span><span class="o">/</span><span class="mi">4</span><span class="p">]</span>   <span class="n">Building</span> <span class="n">fresh</span> <span class="n">packages</span><span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="n">success</span> <span class="n">Saved</span> <span class="n">lockfile</span><span class="o">.</span>
</span></span><span class="line"><span class="cl">  <span class="n">Done</span> <span class="ow">in</span> <span class="mf">17.87</span><span class="n">s</span><span class="o">.</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="修改-cargotoml-为">修改 Cargo.toml 为</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="line"><span class="cl"><span class="c"># You must change these to your own details.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">package</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">name</span> <span class="p">=</span> <span class="s2">&#34;web_assembly_demo&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">description</span> <span class="p">=</span> <span class="s2">&#34;My super awesome Rust, WebAssembly, and Webpack project!&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">version</span> <span class="p">=</span> <span class="s2">&#34;0.1.0&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">authors</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;guzhongren &lt;guzhoongren@live.cn&gt;&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">categories</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;wasm&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">readme</span> <span class="p">=</span> <span class="s2">&#34;README.md&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">edition</span> <span class="p">=</span> <span class="s2">&#34;2018&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">lib</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">crate-type</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;cdylib&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">profile</span><span class="p">.</span><span class="nx">release</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c"># This makes the compiled code faster and smaller, but it makes compiling slower,</span>
</span></span><span class="line"><span class="cl"><span class="c"># so it&#39;s only enabled in release mode.</span>
</span></span><span class="line"><span class="cl"><span class="nx">lto</span> <span class="p">=</span> <span class="kc">true</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">features</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c"># If you uncomment this line, it will enable `wee_alloc`:</span>
</span></span><span class="line"><span class="cl"><span class="c">#default = [&#34;wee_alloc&#34;]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">dependencies</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="c"># The `wasm-bindgen` crate provides the bare minimum functionality needed</span>
</span></span><span class="line"><span class="cl"><span class="c"># to interact with JavaScript.</span>
</span></span><span class="line"><span class="cl"><span class="nx">wasm-bindgen</span> <span class="p">=</span> <span class="s2">&#34;0.2.45&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size</span>
</span></span><span class="line"><span class="cl"><span class="c"># compared to the default allocator&#39;s ~10K. However, it is slower than the default</span>
</span></span><span class="line"><span class="cl"><span class="c"># allocator, so it&#39;s not enabled by default.</span>
</span></span><span class="line"><span class="cl"><span class="nx">wee_alloc</span> <span class="p">=</span> <span class="p">{</span> <span class="nx">version</span> <span class="p">=</span> <span class="s2">&#34;0.4.2&#34;</span><span class="p">,</span> <span class="nx">optional</span> <span class="p">=</span> <span class="kc">true</span> <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># The `web-sys` crate allows you to interact with the various browser APIs,</span>
</span></span><span class="line"><span class="cl"><span class="c"># like the DOM.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">dependencies</span><span class="p">.</span><span class="nx">web-sys</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">version</span> <span class="p">=</span> <span class="s2">&#34;0.3.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">features</span> <span class="p">=</span> <span class="p">[</span><span class="s2">&#34;console&#34;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># The `console_error_panic_hook` crate provides better debugging of panics by</span>
</span></span><span class="line"><span class="cl"><span class="c"># logging them with `console.error`. This is great for development, but requires</span>
</span></span><span class="line"><span class="cl"><span class="c"># all the `std::fmt` and `std::panicking` infrastructure, so it&#39;s only enabled</span>
</span></span><span class="line"><span class="cl"><span class="c"># in debug mode.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">target</span><span class="p">.</span><span class="s2">&#34;cfg(debug_assertions)&#34;</span><span class="p">.</span><span class="nx">dependencies</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">console_error_panic_hook</span> <span class="p">=</span> <span class="s2">&#34;0.1.5&#34;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c"># These crates are used for running unit tests.</span>
</span></span><span class="line"><span class="cl"><span class="p">[</span><span class="nx">dev-dependencies</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="nx">wasm-bindgen-test</span> <span class="p">=</span> <span class="s2">&#34;0.2.45&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">futures</span> <span class="p">=</span> <span class="s2">&#34;0.1.27&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">js-sys</span> <span class="p">=</span> <span class="s2">&#34;0.3.22&#34;</span>
</span></span><span class="line"><span class="cl"><span class="nx">wasm-bindgen-futures</span> <span class="p">=</span> <span class="s2">&#34;0.3.22&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Rust 的依赖会在启动 Web 程序的时候自动安装。</p>]]></description></item><item><title>在 VSCode 上配置 Rust 的调试环境</title><link>https://guzhongren.github.io/2019/10/%E5%9C%A8-vscode-%E4%B8%8A%E9%85%8D%E7%BD%AErust%E7%9A%84%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83.zh/</link><pubDate>Thu, 17 Oct 2019 20:50:05 +0800</pubDate><author>谷中仁</author><guid>https://guzhongren.github.io/2019/10/%E5%9C%A8-vscode-%E4%B8%8A%E9%85%8D%E7%BD%AErust%E7%9A%84%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83.zh/</guid><description><![CDATA[<p></p>
<h2 id="插件">插件</h2>
<p>在 VS Code 上进行 Rust 的开发，需要使用一下两个库</p>
<ul>
<li>RLS(vscode 搜索插件 rls)</li>
<li>lldb(vscode 搜索插件 codelldb)</li>
</ul>
<p>安装很简单，不用说</p>
<h2 id="配置">配置</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="c1">// 使用 IntelliSense 了解相关属性。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// 悬停以查看现有属性的描述。
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="c1">// 欲了解更多信息，请访问：https://go.microsoft.com/fwlink/?linkid=830387
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="nt">&#34;version&#34;</span><span class="p">:</span> <span class="s2">&#34;0.2.0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;configurations&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Debug executable &#39;show_posts&#39;&#34;</span><span class="p">,</span> <span class="c1">// 配置名称，将会在调试配置下拉列表中显示
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;lldb&#34;</span><span class="p">,</span> <span class="c1">// 调试器类型：Windows 表示器使用 cppvsdbg；GDB 和 LLDB 使用 cppdbg。该值自动生成
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;request&#34;</span><span class="p">:</span> <span class="s2">&#34;launch&#34;</span><span class="p">,</span> <span class="c1">// 调试方式
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;cargo&#34;</span><span class="p">:</span> <span class="p">{</span> <span class="c1">// 运行的参数
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>        <span class="nt">&#34;args&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;build&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;--bin=show_posts&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="s2">&#34;--package=diesel_demo&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="nt">&#34;filter&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;show_posts&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">          <span class="nt">&#34;kind&#34;</span><span class="p">:</span> <span class="s2">&#34;bin&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">},</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;args&#34;</span><span class="p">:</span> <span class="p">[],</span> <span class="c1">// 传递给程序的参数，没有参数留空即可
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>      <span class="nt">&#34;cwd&#34;</span><span class="p">:</span> <span class="s2">&#34;${workspaceFolder}&#34;</span> <span class="c1">// 调试程序时的工作目录
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="p">},</span>
</span></span><span class="line"><span class="cl"><span class="err">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p></p>]]></description></item></channel></rss>