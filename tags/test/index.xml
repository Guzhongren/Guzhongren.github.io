<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>test - 标签 - 谷中仁的博客</title><link>https://guzhongren.github.io/tags/test/</link><description>test - 标签 - 谷中仁的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>guzhongren@live.cn (谷中仁)</managingEditor><webMaster>guzhongren@live.cn (谷中仁)</webMaster><copyright>Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 18 Apr 2021 21:57:08 +0800</lastBuildDate><atom:link href="https://guzhongren.github.io/tags/test/" rel="self" type="application/rss+xml"/><item><title>Test With 3rd Party Library</title><link>https://guzhongren.github.io/2021/04/test-with-3rd-party-library/</link><pubDate>Sun, 18 Apr 2021 21:57:08 +0800</pubDate><author>作者</author><guid>https://guzhongren.github.io/2021/04/test-with-3rd-party-library/</guid><description><![CDATA[<div class="featured-image">
                <img src="https://images.pexels.com/photos/2881785/pexels-photo-2881785.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=2&amp;h=750&amp;w=1260" referrerpolicy="no-referrer">
            </div>场景 一般的前端开发情况下，我们都会用到其他的第三方库，比如 UI 库 Ant Desgin， 请求库 axios 等，通常对于 UI 库，我们可以通过快照等操作对其进行测试，]]></description></item><item><title>Golang 依赖注入(Dependency Injection)</title><link>https://guzhongren.github.io/2019/09/golang-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5dependency-injection.zh/</link><pubDate>Tue, 10 Sep 2019 10:52:24 +0800</pubDate><author>作者</author><guid>https://guzhongren.github.io/2019/09/golang-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5dependency-injection.zh/</guid><description>&lt;div class="featured-image">
&lt;img src="https://golang.google.cn/lib/godoc/images/footer-gopher.jpg" referrerpolicy="no-referrer">
&lt;/div>Dependency Injection 🧪 依赖注入是目前很多优秀框架都在使用的一个设计模式。 Dependency Injection 常常简称为：DI。它是实现控制反转（Inversion of Control – IoC）的一个模式。</description></item><item><title>Golang 基准测试(Benchmark)</title><link>https://guzhongren.github.io/2019/09/golang-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95benchmark.zh/</link><pubDate>Tue, 10 Sep 2019 09:56:24 +0800</pubDate><author>作者</author><guid>https://guzhongren.github.io/2019/09/golang-%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95benchmark.zh/</guid><description>&lt;div class="featured-image">
&lt;img src="https://golang.google.cn/lib/godoc/images/footer-gopher.jpg" referrerpolicy="no-referrer">
&lt;/div>Benchmark 🧪 基准测试是对计算机系统的性能的测试。 在程序中，基准测试，是一种测试代码性能的方法；比如有一个问题你有多种不同的方案，你想选择一种性能最好</description></item></channel></rss>